{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation: creates full Magento Setup with Autoscaling group, ELB, Cloudfront and so on",

  "Parameters" : {
    "TemplatesBucket" : {
      "Type" : "String",
      "Default" : "https://s3-us-west-2.amazonaws.com/epxlabs-magento-templates",
      "Description" : "Path to bucket with templates for setup",
      "ConstraintDescription" : "must be valid path to bucket with templates. Ex. https://s3-us-west-2.amazonaws.com/epxlabs-magento-templates"
    },

    "AZCount" : {
      "Description": "The number of availability zones to use for frontend servers",
      "Default": "1",
      "Type": "String",
      "AllowedValues": [ "1", "2", "3", "4", "5" ],
      "ConstraintDescription" : "must be valid value <= availability zones in region. Ex. 3. Try to check https://github.com/jsonmaur/aws-regions"
    },

    "Subnet2oct" : {
      "Description": "2 first octets of VPC Subnet",
      "Default": "10.0",
      "Type": "String",
      "ConstraintDescription" : "must be x.y Ex. 10.0"
    },

    "RemoteAccessCIDR": {
      "Description": "IP CIDR from where you could SSH to NATs",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x."
    },

    "DBAllocatedStorage": {
      "Default": "16",
      "Description": "The size of the database in gigabytes (GB)",
      "Type": "Number",
      "MinValue": "5",
      "MaxValue": "4096",
      "ConstraintDescription": "must be between 5 and 4096 GB. If Iops specified, AllocatedStorage must be at least 100 GB and with minimum Iops value of 1000"
    },
    "DBAutoMinorVersionUpgrade": {
      "Default": "true",
      "Description": "Select true/false to setup Auto Minor Version upgrade",
      "Type": "String",
      "AllowedValues": [ "true", "false" ]
    },
    "DBBackupRetentionPeriod": {
      "Type": "String",
      "Default": "7",
      "Description": "The number of days for which automatic DB snapshots are retained."
    },
    "DBInstanceClass": {
      "Default": "db.m1.small",
      "Description": "The name of the compute and memory capacity class of the DB instance.",
      "Type": "String",
      "AllowedValues": [
        "db.t1.micro",
        "db.m1.small",
        "db.m3.medium", "db.m3.large", "db.m3.xlarge", "db.m3.2xlarge",
        "db.r3.large", "db.r3.xlarge", "db.r3.2xlarge", "db.r3.4xlarge", "db.r3.8xlarge",
        "db.t2.micro", "db.t2.small", "db.t2.medium",
        "db.m2.xlarge", "db.m2.2xlarge", "db.m2.4xlarge", "db.cr1.8xlarge",
        "db.m1.medium", "db.m1.large", "db.m1.xlarge"
      ],
      "ConstraintDescription": "Must select a valid database instance type."
    },
    "DBName": {
      "Default": "MagentoMySQLDB",
      "Description": "Name of the initial database for the MySQL RDS Instance.",
      "Type": "String",
      "MinLength": "5",
      "MaxLength": "64",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*"
    },
    "DBIops": {
      "Default": "1000",
      "Description": "DB Iops. Used only when io1 specified for the StorageType property",
      "Type": "Number",
      "AllowedValues": [ "1000", "2000", "3000", "4000", "5000", "6000", "7000", "8000", "9000", "10000" ],
      "ConstraintDescription": "1000 Iops min and increased in 1K increments. "
    },
    "DBMasterUsername": {
      "Default": "admin",
      "Description": "The database admin account username",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },
    "DBMasterUserPassword": {
      "Description": "The database admin account password. Must be at least 8 characters containing letters, numbers and symbols",
      "Type": "String",
      "MinLength": "8",
      "MaxLength": "32",
      "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
      "NoEcho": "True"
    },
    "DBMultiAZ": {
      "Default": "true",
      "Description": "Specifies if the database instance is a multiple Availability Zone deployment.",
      "Type": "String",
      "AllowedValues": [ "true", "false" ]
    },
    "DBPubliclyAccessible": {
      "Default": "false",
      "Description": "Indicates whether the database instance is an Internet-facing instance.",
      "Type": "String",
      "AllowedValues": [ "true", "false" ]
    },
    "DBStorageType": {
      "Default": "gp2",
      "Description": "The storage type associated with this database instance",
      "Type": "String",
      "AllowedValues": [ "standard", "gp2", "io1" ]
    }


  },

  "Conditions": {
    "AZCount5": { "Fn::Equals" : [ { "Ref" : "AZCount" }, "5" ] },
    "AZCount4": { "Fn::Or" : [ { "Fn::Equals" : [ { "Ref" : "AZCount" }, "4" ] }, { "Condition" : "AZCount5" } ] },
    "AZCount3": { "Fn::Or" : [ { "Fn::Equals" : [ { "Ref" : "AZCount" }, "3" ] }, { "Condition" : "AZCount4" } ] },
    "AZCount2": { "Fn::Or" : [ { "Fn::Equals" : [ { "Ref" : "AZCount" }, "2" ] }, { "Condition" : "AZCount3" } ] }
  },

  "Resources" : {
    "VPCLayer01" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "Parameters" : {
          "Deploy" : { "Ref" : "AWS::StackName" },
          "VPCSubnet" : { "Fn::Join" : [ ".", [ { "Ref" : "Subnet2oct" }, "0.0/16" ] ] },
          "VPCInternalDomainName" : "lab.int"
        },
        "TemplateURL" : { "Fn::Join" : [ "", [ { "Ref" : "TemplatesBucket" }, "/nested/vpc.template" ] ] }
      }
    },

    "AZLayer01" : {
      "Type" : "AWS::CloudFormation::Stack",
      "DependsOn" : [ "VPCLayer01" ],
      "Properties" : {
        "Parameters" : {
          "Deploy" : { "Ref" : "AWS::StackName" },
          "VPC" : { "Fn::GetAtt" : [ "VPCLayer01", "Outputs.VPC" ] },
          "PublicSubnetRange" : { "Fn::Join" : [ ".", [ { "Ref" : "Subnet2oct" }, "0.0/24" ] ] },
          "PrivateSubnetRange" : { "Fn::Join" : [ ".", [ { "Ref" : "Subnet2oct" }, "1.0/24" ] ] },
          "SubnetAZ" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ] },
          "InternetGateway" : { "Fn::GetAtt" : [ "VPCLayer01", "Outputs.InternetGateway" ] }
        },
        "TemplateURL" : { "Fn::Join" : [ "", [ { "Ref" : "TemplatesBucket" }, "/nested/az.template" ] ] }
      }
    },

    "AZLayer02" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Condition" : "AZCount2",
      "DependsOn" : [ "VPCLayer01" ],
      "Properties" : {
        "Parameters" : {
          "Deploy" : { "Ref" : "AWS::StackName" },
          "VPC" : { "Fn::GetAtt" : [ "VPCLayer01", "Outputs.VPC" ] },
          "PublicSubnetRange" : { "Fn::Join" : [ ".", [ { "Ref" : "Subnet2oct" }, "2.0/24" ] ] },
          "PrivateSubnetRange" : { "Fn::Join" : [ ".", [ { "Ref" : "Subnet2oct" }, "3.0/24" ] ] },
          "SubnetAZ" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ] },
          "InternetGateway" : { "Fn::GetAtt" : [ "VPCLayer01", "Outputs.InternetGateway" ] }
        },
        "TemplateURL" : { "Fn::Join" : [ "", [ { "Ref" : "TemplatesBucket" }, "/nested/az.template" ] ] }
      }
    },

    "AZLayer03" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Condition" : "AZCount3",
      "DependsOn" : [ "VPCLayer01" ],
      "Properties" : {
        "Parameters" : {
          "Deploy" : { "Ref" : "AWS::StackName" },
          "VPC" : { "Fn::GetAtt" : [ "VPCLayer01", "Outputs.VPC" ] },
          "PublicSubnetRange" : { "Fn::Join" : [ ".", [ { "Ref" : "Subnet2oct" }, "4.0/24" ] ] },
          "PrivateSubnetRange" : { "Fn::Join" : [ ".", [ { "Ref" : "Subnet2oct" }, "5.0/24" ] ] },
          "SubnetAZ" : { "Fn::Select" : [ "2", { "Fn::GetAZs" : "" } ] },
          "InternetGateway" : { "Fn::GetAtt" : [ "VPCLayer01", "Outputs.InternetGateway" ] }
        },
        "TemplateURL" : { "Fn::Join" : [ "", [ { "Ref" : "TemplatesBucket" }, "/nested/az.template" ] ] }
      }
    },

    "AZLayer04" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Condition" : "AZCount4",
      "DependsOn" : [ "VPCLayer01" ],
      "Properties" : {
        "Parameters" : {
          "Deploy" : { "Ref" : "AWS::StackName" },
          "VPC" : { "Fn::GetAtt" : [ "VPCLayer01", "Outputs.VPC" ] },
          "PublicSubnetRange" : { "Fn::Join" : [ ".", [ { "Ref" : "Subnet2oct" }, "6.0/24" ] ] },
          "PrivateSubnetRange" : { "Fn::Join" : [ ".", [ { "Ref" : "Subnet2oct" }, "7.0/24" ] ] },
          "SubnetAZ" : { "Fn::Select" : [ "3", { "Fn::GetAZs" : "" } ] },
          "InternetGateway" : { "Fn::GetAtt" : [ "VPCLayer01", "Outputs.InternetGateway" ] }
        },
        "TemplateURL" : { "Fn::Join" : [ "", [ { "Ref" : "TemplatesBucket" }, "/nested/az.template" ] ] }
      }
    },

    "AZLayer05" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Condition" : "AZCount5",
      "DependsOn" : [ "VPCLayer01" ],
      "Properties" : {
        "Parameters" : {
          "Deploy" : { "Ref" : "AWS::StackName" },
          "VPC" : { "Fn::GetAtt" : [ "VPCLayer01", "Outputs.VPC" ] },
          "PublicSubnetRange" : { "Fn::Join" : [ ".", [ { "Ref" : "Subnet2oct" }, "8.0/24" ] ] },
          "PrivateSubnetRange" : { "Fn::Join" : [ ".", [ { "Ref" : "Subnet2oct" }, "9.0/24" ] ] },
          "SubnetAZ" : { "Fn::Select" : [ "4", { "Fn::GetAZs" : "" } ] },
          "InternetGateway" : { "Fn::GetAtt" : [ "VPCLayer01", "Outputs.InternetGateway" ] }
        },
        "TemplateURL" : { "Fn::Join" : [ "", [ { "Ref" : "TemplatesBucket" }, "/nested/az.template" ] ] }
      }
    },

    "MySQLRDSSecurityGroup0": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow access to MySQL Port",
        "VpcId": { "Fn::GetAtt" : [ "VPCLayer01", "Outputs.VPC" ] },
        "SecurityGroupIngress": [ { "IpProtocol": "tcp", "FromPort": "3306", "ToPort": "3306", "CidrIp": { "Fn::Join" : [ ".", [ { "Ref" : "Subnet2oct" }, "0.0/16" ] ] } } ]
      }
    },

    "RDSMySQL": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": { "Fn::Join" : [ "", [ { "Ref" : "TemplatesBucket" }, "/nested/rdsmysql.template" ] ] },
        "Parameters": {
          "VPC": { "Fn::GetAtt" : [ "VPCLayer01", "Outputs.VPC" ] },
          "AutoScaledInstanceSecurityGroup": { "Ref": "MySQLRDSSecurityGroup0" },
          "Subnets": { "Fn::Join": [ ",", [ { "Fn::GetAtt" : [ "AZLayer01", "Outputs.PublicSubnet" ] },
                                            { "Fn::If" : [ "AZCount2", { "Fn::GetAtt" : [ "AZLayer02", "Outputs.PublicSubnet" ] }, {"Ref" : "AWS::NoValue"} ] },
                                            { "Fn::If" : [ "AZCount3", { "Fn::GetAtt" : [ "AZLayer03", "Outputs.PublicSubnet" ] }, {"Ref" : "AWS::NoValue"} ] },
                                            { "Fn::If" : [ "AZCount4", { "Fn::GetAtt" : [ "AZLayer04", "Outputs.PublicSubnet" ] }, {"Ref" : "AWS::NoValue"} ] },
                                            { "Fn::If" : [ "AZCount5", { "Fn::GetAtt" : [ "AZLayer05", "Outputs.PublicSubnet" ] }, {"Ref" : "AWS::NoValue"} ] }
                                   ] ] },
          "DBAllocatedStorage": { "Ref": "DBAllocatedStorage" },
          "DBAutoMinorVersionUpgrade": { "Ref": "DBAutoMinorVersionUpgrade" },
          "DBBackupRetentionPeriod": { "Ref": "DBBackupRetentionPeriod" },
          "DBInstanceClass": { "Ref": "DBInstanceClass" },
          "DBName": { "Ref": "DBName" },
          "DBIops": { "Ref": "DBIops" },
          "DBMasterUsername": { "Ref": "DBMasterUsername" },
          "DBMasterUserPassword": { "Ref": "DBMasterUserPassword" },
          "DBMultiAZ": { "Ref": "DBMultiAZ" },
          "DBPubliclyAccessible": { "Ref": "DBPubliclyAccessible" },
          "DBStorageType": { "Ref": "DBStorageType" }
        }
      }
    }

  }
}

